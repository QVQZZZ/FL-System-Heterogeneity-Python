# Federated Learning Configuration (Template File)
dataset: mnist
  # dataset可选为:
  #    mnist
  #    cifar10
num_clients: 10
selected_rate: 0.1
total_epoch: 50
local_epoch: 1
difference: false
  # difference用于控制每轮通信选择的客户端的种类:
  #    若clients变量包含所有种类的客户端,则应该选为True,保证每轮通信都能选择所有种类的客户端:
  #        因此需要确保clients变量包含所有宽度的客户端,即:
  #        difference为True: iid, dirichlet, test_small_exp
  #    若clients变量不包含所有种类的客户端,则应该选为False,让每轮通信中都随机选择客户端,但应至少包含一个宽度为1的客户端确保聚合不出现0:
  #        因此需要确保clients变量包含宽度为1的客户端,但可以不包含其他种类的客户端,即:
  #        difference为False: ideal_iid, ideal_dirichlet, exclusive_iid, exclusive_dirichlet, test_small_control
split_method: iid
  # split_method控制数据的拆分方法以及客户端的选择:(一般来说,除了在heterofl.py中需要baseline的分割方法,其他地方只需要选择'iid'和'dirichlet')
  #    iid: 将数据随机(iid)分到客户端中
  #    dirichlet: 将数据按狄利克雷分布(noniid)分到客户端中
  #    ideal_iid: 将数据随机(iid)分到客户端中,客户端种类为全1客户端,用heterofl处理但等价于FedAvg (baseline,理想情况下的FedAvg)
  #    ideal_dirichlet: 将数据按狄利克雷分布(noniid)分到客户端中,客户端种类为全1客户端,用heterofl处理但等价于FedAvg (baseline,理想情况下的FedAvg)
  #    exclusive_iid: 将数据随机(iid)分到客户端中,随后只保留1客户端,用heterofl处理但等价于FedAvg (baseline,排除弱客户端)
  #    exclusive_dirichlet: 将数据按狄利克雷分布(noniid)分到客户端中,用heterofl处理但等价于FedAvg (baseline,排除弱客户端)
  #    test_small_exp: 将数据0-2类分到小客户端,其余分到大客户端,都采用狄利克雷分布(noniid),用heterofl处理 (测试小模型性能实验的实验组)
  #    test_small_control: 将数据0-2类分到小客户端,其余分到大客户端,都采用狄利克雷分布(noniid),随后剔除小客户端,用heterofl处理 (测试小模型性能实验的对照组)